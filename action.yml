# Copyright 2023 You-Sheng Yang and others
# SPDX-License-Identifier: FSFAP
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved. This file is offered as-is, without any warranty.
---
name: 'debian-build-action'
description: 'Debian package build action'
author: 'vicamo'

inputs:
  base_image:
    description: base docker image
    default: ''
  gbp_image:
    description: gbp docker image
    default: ''
  generic_tests_image:
    description: generic-tests docker image
    default: ''
  lintian_image:
    description: lintian docker image
    default: ''
  blhc_image:
    description: blhc docker image
    default: ''
  autopkgtest_image:
    description: autopkgtest docker image
    default: ''
  release:
    description: >-
      Specify the target release to run the workflow. By default, everything
      will run on the 'unstable' suite. The following releases are currently
      supported:

      * experimental

      * unstable (default)

      * testing

      * stable
    default: 'unstable'
  source_path:
    description: >-
      Relative path to GITHUB_WORKSPACE where source root is stored. Default is
      `GITHUB_WORKSPACE`.
    default: ''
  output_path:
    description: >-
      Relative path to GITHUB_WORKSPACE where built artifacts should be stored.
      Default is `source_path`/debian/output.
    default: ''
  setup_gitattributes:
    description: >-
      Enable automatic `gbp setup_gitattributes` at preparing source repository.
      Boolean. Default: 'true'.
    default: 'true'
  source_args:
    description: 'Additional arguments to `gbp buildpackage`.'
    default: ''
  build_arch:
    description: 'Debian architecture. Default: image architecture.'
    default: ''
  host_arch:
    description: 'Debian architecture. Default: same as `build_arch`.'
    default: ''
  build_type:
    description: 'all|any|binary|source|full. Default: full`.'
    default: 'full'
  build_twice:
    description: >-
      Build the package twice. Boolean. Default: false.
    default: 'false'
  build_args:
    description: 'Additional arguments to `dpkg-buildpackage`.'
    default: ''
  version_bump:
    description: >-
      Automatically bump debian version. Boolean. Default 'false' when
      `build_type` is 'source'; 'true' otherwise.
    default: ''
  lintian_fatal_warning:
    description: 'Fail the test at warning condition. Default: false.'
    default: 'false'
  lintian_show_overrides:
    description: 'To make Lintian show overridden tags. Default: false.'
    default: 'false'
  lintian_suppress_tags:
    description: 'Suppress the listed tags.'
    default: ''
  lintian_args:
    description: >-
      Arguments appended to lintian's generated arguments.
    default: ''
  blhc_args:
    description: 'Additional arguments to `blhc`.'
    default: ''
  autopkgtest_args:
    description: 'Additional arguments to `autopkgtest`.'
    default: ''

outputs:
  source_path:
    description: >-
      The actual `source_path` used.
    value: ${{ steps.extract.outputs.source_path }}
  output_path:
    description: >-
      The actual `output_path` used.
    value: ${{ steps.extract.outputs.output_path }}
  missing_breaks_report_path:
    description: >-
      Relative path to GITHUB_WORKSPACE where built report is stored.
    value: ${{ steps.missing-breaks.outputs.report_path }}
  rc_bugs_report_path:
    description: >-
      Relative path to GITHUB_WORKSPACE where built report is stored.
    value: ${{ steps.rc-bugs.outputs.report_path }}
  lintian_xml_report_path:
    description: >-
      Relative path to GITHUB_WORKSPACE where built report is stored.
    value: ${{ steps.lintian.outputs.xml_report_path }}
  lintian_html_report_path:
    description: >-
      Relative path to GITHUB_WORKSPACE where built report is stored.
    value: ${{ steps.lintian.outputs.html_report_path }}

runs:
  using: 'composite'
  steps:
    - name: Extract source
      id: extract
      uses: ./actions/extract-source
      with:
        image: ${{ inputs.gbp_image }}
        source_path: ${{ inputs.source_path }}
        output_path: ${{ inputs.output_path }}
        setup_gitattributes: ${{ inputs.setup_gitattributes }}
        source_args: ${{ inputs.source_args }}
    - name: Build binary packages
      id: build
      uses: ./actions/gbp
      with:
        image: ${{ inputs.base_image }}
        release: ${{ inputs.release }}
        source_path: ${{ steps.extract.outputs.built_source_path }}
        build_arch: ${{ inputs.build_arch }}
        host_arch: ${{ inputs.host_arch }}
        build_type: ${{ inputs.build_type }}
        build_twice: ${{ inputs.build_twice }}
        build_args: ${{ inputs.build_args }}
        version_bump: ${{ inputs.version_bump }}
    - name: missing-breaks test
      id: missing-breaks
      uses: ./actions/missing-breaks
      with:
        image: ${{ inputs.generic_tests_image }}
        release: ${{ inputs.release }}
        source_path: ${{ steps.build.outputs.output_path }}
        output_path: ${{ steps.build.outputs.output_path }}
    - name: rc-bugs test
      id: rc-bugs
      uses: ./actions/rc-bugs
      with:
        image: ${{ inputs.generic_tests_image }}
        release: ${{ inputs.release }}
        source_path: ${{ steps.build.outputs.output_path }}
        output_path: ${{ steps.build.outputs.output_path }}
    - name: lintian test
      id: lintian
      # https://github.com/hustle-ci/debian-build-action/issues/2
      if: ${{ inputs.release != 'experimental' }}
      uses: ./actions/lintian
      with:
        image: ${{ inputs.lintian_image }}
        release: ${{ inputs.release }}
        source_path: ${{ steps.build.outputs.output_path }}
        output_path: ${{ steps.build.outputs.output_path }}
        fatal_warning: ${{ inputs.lintian_fatal_warning }}
        show_overrides: ${{ inputs.lintian_show_overrides }}
        suppress_tags: ${{ inputs.lintian_suppress_tags }}
        args: ${{ inputs.lintian_args }}
    - name: blhc test
      uses: ./actions/blhc
      with:
        image: ${{ inputs.blhc_image }}
        source_path: ${{ steps.build.outputs.output_path }}
        output_path: ${{ steps.build.outputs.output_path }}
        args: ${{ inputs.blhc_args }}
    - name: autopkgtest test
      uses: ./actions/autopkgtest
      with:
        image: ${{ inputs.autopkgtest_image }}
        release: ${{ inputs.release }}
        source_path: ${{ steps.build.outputs.output_path }}
        output_path: ${{ steps.build.outputs.output_path }}
        args: ${{ inputs.autopkgtest_args }}
        testbed: ${{ inputs.base_image }}
