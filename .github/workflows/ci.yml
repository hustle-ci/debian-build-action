# Copyright 2023 You-Sheng Yang and others
# SPDX-License-Identifier: FSFAP
# Copying and distribution of this file, with or without modification, are
# permitted in any medium without royalty provided the copyright notice and
# this notice are preserved. This file is offered as-is, without any warranty.
---
name: 'CI'
on:
  push:
    branches:
      - main
    paths-ignore:
      - LICENSE
      - 'README.*'
  pull_request:
    paths-ignore:
      - LICENSE
      - 'README.*'

env:
  IMAGE_VERSION: '1'
  DEFAULT_RELEASE: 'unstable'

jobs:
  base-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - release: 'experimental'
            platforms: 'linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/arm/v5,linux/mips64le,linux/riscv64,linux/ppc64le,linux/s390x'
            target: 'base'
            vendor: 'debian'
          - release: 'unstable'
            platforms: 'linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/arm/v5,linux/mips64le,linux/riscv64,linux/ppc64le,linux/s390x'
            target: 'base'
            vendor: 'debian'
          - release: 'testing'
            platforms: 'linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/arm/v5,linux/mips64le,linux/ppc64le,linux/s390x'
            target: 'base'
            vendor: 'debian'
          - release: 'stable'
            platforms: 'linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7,linux/arm/v5,linux/mips64le,linux/ppc64le,linux/s390x'
            target: 'base'
            vendor: 'debian'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          labels: |
            org.opencontainers.image.description=${{ matrix.target }} image for ${{ matrix.vendor }}:${{ matrix.release }}
            org.opencontainers.image.licenses=FSFAP
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.version=${{ env.IMAGE_VERSION }}
          images: ghcr.io/${{ github.repository_owner }}/staging
          flavor: |
            latest=false
            prefix=${{ github.run_id }}-
          tags: |
            ${{ matrix.target }}-${{ matrix.release }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: 'images'
          build-args: |
              BASE_IMAGE=${{ matrix.vendor }}:${{ matrix.release }}
              VENDOR=${{ matrix.vendor }}
              RELEASE=${{ matrix.release }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true
          outputs: type=image,push=true,annotation-index.org.opencontainers.image.description=${{ matrix.target }} image for ${{ matrix.vendor }}:${{ matrix.release }}
          platforms: ${{ matrix.platforms }}
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          target: ${{ matrix.target }}

  check-license:
    needs:
      - base-images
    uses: ./.github/workflows/check-license.yml
    with:
      # env context not allowed here, so put hard-coded string instead of env.DEFAULT_RELEASE
      image: ghcr.io/${{ github.repository_owner }}/staging:${{ github.run_id }}-base-unstable

  prune-staging-images:
    needs:
      - base-images
      - check-license
    if: ${{ always() }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Prune staging images
        uses: vlaurin/action-ghcr-prune@v0.5.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          organization: ${{ github.repository_owner }}
          container: 'staging'
          dry-run: false
          prune-tags-regexes: |
            ^${{ github.run_id }}-
          prune-untagged: true
